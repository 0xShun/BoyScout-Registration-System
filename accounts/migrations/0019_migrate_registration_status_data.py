# Generated by Django 5.2.7 on 2025-10-17 19:04

from django.db import migrations


def migrate_registration_statuses(apps, schema_editor):
    """
    Migrate old registration statuses to new simplified system:
    - payment_verified, active -> active
    - pending_payment, payment_submitted, partial_payment, inactive -> inactive
    """
    User = apps.get_model('accounts', 'User')
    
    # Map old statuses that mean user is active
    active_statuses = ['payment_verified', 'active']
    User.objects.filter(registration_status__in=active_statuses).update(
        registration_status='active',
        is_active=True
    )
    
    # Map old statuses that mean user is inactive
    inactive_statuses = ['pending_payment', 'payment_submitted', 'partial_payment', 'inactive']
    User.objects.filter(registration_status__in=inactive_statuses).update(
        registration_status='inactive',
        is_active=False
    )
    
    # Keep admins active regardless
    User.objects.filter(rank='admin').update(
        registration_status='active',
        is_active=True
    )


def reverse_migration(apps, schema_editor):
    """
    Reverse migration - map back to old statuses
    """
    User = apps.get_model('accounts', 'User')
    
    # Map active -> payment_verified (closest equivalent)
    User.objects.filter(registration_status='active', rank__ne='admin').update(
        registration_status='payment_verified'
    )
    
    # Map inactive -> pending_payment
    User.objects.filter(registration_status='inactive').update(
        registration_status='pending_payment'
    )


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0018_simplify_registration_status'),
    ]

    operations = [
        migrations.RunPython(migrate_registration_statuses, reverse_migration),
    ]
