# Generated by Django 5.2.7 on 2025-10-17 19:26

from django.db import migrations


def migrate_payment_statuses(apps, schema_editor):
    """
    Convert pending/partial payment statuses to appropriate values:
    - 'pending' → 'not_required' (payment intent but not completed - treat as unpaid)
    - 'partial' → 'not_required' (partial payments no longer supported)
    - 'paid' → 'paid' (keep as is)
    - 'rejected' → 'rejected' (keep as is)
    - 'not_required' → 'not_required' (keep as is)
    """
    EventRegistration = apps.get_model('events', 'EventRegistration')
    
    # Convert pending to not_required (they need to pay in full)
    pending_count = EventRegistration.objects.filter(payment_status='pending').update(
        payment_status='not_required'
    )
    
    # Convert partial to not_required (no partial payments allowed)
    partial_count = EventRegistration.objects.filter(payment_status='partial').update(
        payment_status='not_required'
    )
    
    print(f"Migrated {pending_count} pending payments to not_required")
    print(f"Migrated {partial_count} partial payments to not_required")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration - convert back to pending
    """
    EventRegistration = apps.get_model('events', 'EventRegistration')
    # This is a best-effort reverse - we can't perfectly restore the original state
    # Just convert not_required back to pending if they were likely payments
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0010_remove_pending_partial_payments'),
    ]

    operations = [
        migrations.RunPython(migrate_payment_statuses, reverse_migration),
    ]
